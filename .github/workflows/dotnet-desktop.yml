name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: windows-latest

    env:
      Solution_Name: chatgpt-typer.sln
      Test_Project_Path: chatgpt-typer.csproj
      Publish_Directory: publish/${{ matrix.configuration }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build solution
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration /p:Platform="Any CPU"
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Execute unit tests
      run: dotnet test $env:Test_Project_Path /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Publish the application
      run: dotnet publish $env:Solution_Name --configuration ${{ matrix.configuration }} --output ${{ env.Publish_Directory }}
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Package the application
      run: Compress-Archive -Path ${{ env.Publish_Directory }}/* -DestinationPath myApplication-${{ matrix.configuration }}.zip

    - name: Upload Application Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: myApplication-${{ matrix.configuration }}
        path: myApplication-${{ matrix.configuration }}.zip
        if-no-files-found: warn
        retention-days: 10

    # Optional: Create Release and Upload Artifact to Release
    - if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
      name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
      name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./myApplication-${{ matrix.configuration }}.zip
        asset_name: myApplication-${{ matrix.configuration }}.zip
        asset_content_type: application/zip
