name: .NET Core Desktop CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  actions: read

jobs:
  build-and-release:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
    env:
      Solution_Name: chatgpt-typer.sln
      Test_Project_Path: chatgpt-typer.csproj
      Publish_Directory: publish/${{ matrix.configuration }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'  # Specify the .NET version your project targets

    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v2  # This step sets up MSBuild in the GitHub Actions environment

    - name: Restore Dependencies
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Build Solution
      run: msbuild ${{ env.Solution_Name }} /p:Configuration=${{ matrix.configuration }} /p:Platform="Any CPU"

    - name: Execute Tests
      run: dotnet test ${{ env.Test_Project_Path }} --no-restore --verbosity normal

    - name: Publish Application
      run: dotnet publish ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --output ${{ env.Publish_Directory }}

    - name: Package Application
      run: Compress-Archive -Path ${{ env.Publish_Directory }}/* -DestinationPath ./myApplication-${{ matrix.configuration }}.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.run_number }}-${{ matrix.configuration }}-${{ github.sha }}
        release_name: Release ${{ github.run_number }} ${{ matrix.configuration }} at ${{ github.event.head_commit.timestamp }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./myApplication-${{ matrix.configuration }}.zip
        asset_name: myApplication-${{ matrix.configuration }}.zip
        asset_content_type: application/zip
